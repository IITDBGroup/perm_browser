<project name="Build PermBrowser" default="dist" basedir=".">
	
	<!-- Internal Task defs -->
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
	  <classpath>
	    <pathelement location="${basedir}/lib/ant-contrib.jar"/>
	  </classpath>
	</taskdef>
	
	<!-- Properties -->
	
	<property name="sourcedir" value="${basedir}/src" />
	<property name="binarydir" value="${basedir}/bin" />
	<property name="librarydir" value="${basedir}/lib" />
	<property name="builddir" value="${basedir}/build" />
	<property name="resourcedir" value="${basedir}/resource/" />
	<property name="bundledir" value="${basedir}/build/PermBrowser.app/Contents/MacOS/" />
	<property name="OSType" value="${os.name}:${os.arch}:${os.version}" />
	
	<!-- Class-path set up -->
	
	<path id="libraries">
		<fileset dir="${librarydir}" />
	</path>
	
	<path id="genClassPath">
		<fileset dir="${librarydir}">
			<include name="*.jar"/>
			<exclude name="ant-*.jar"/>
		</fileset>
	</path>
			
	<path id="winClassPath">
		<path refid="genClassPath" />
	    <fileset dir="${librarydir}/swtwin">
	    	<include name="*.jar"/>
	    	<include name="*.dll"/>
	    </fileset>
	</path>

	<pathconvert property="winJarClasspath" pathsep="    ">
		<path refid="winClassPath" />
	    <mapper>
	    <chainedmapper>
	      <flattenmapper/>
	      <globmapper from="*" to="lib/*" casesensitive="no"/>
	    </chainedmapper>
	    </mapper>
	</pathconvert>
	
	<path id="linuxClassPath">
		<path refid="genClassPath" />
	    <fileset dir="${librarydir}/swtlinux">
	    	<include name="*.jar"/>
	    	<include name="*.so"/>
	    </fileset>
	</path>

	<pathconvert property="linuxJarClasspath" pathsep="    ">
		<path refid="linuxClassPath" />
	    <mapper>
	    <chainedmapper>
	      <flattenmapper/>
	      <globmapper from="*" to="lib/*" casesensitive="no"/>
	    </chainedmapper>
	    </mapper>
	</pathconvert>
	
	
	<path id="carbonClassPath">
		<path refid="genClassPath" />
	    <fileset dir="${librarydir}/swtmaccarbon">
	    	<include name="*.jar"/>
	    	<include name="*.jnilib"/>
	    </fileset>
	</path>
	
	<pathconvert property="carbonJarClasspath" pathsep="    ">
		<path refid="carbonClassPath" />
	    <mapper>
	    <chainedmapper>
	      <flattenmapper/>
	      <globmapper from="*" to="lib/*" casesensitive="no"/>
	    </chainedmapper>
	    </mapper>
	</pathconvert>
	
	
	<path id="cocoaClassPath">
		<path refid="genClassPath" />
	    <fileset dir="${librarydir}/swtmaccocoa">
	    	<include name="*.jar"/>
	    	<include name="*.jnilib"/>
	    </fileset>
	</path>
	
	<pathconvert property="cocoaJarClasspath" pathsep="    ">
		<path refid="cocoaClassPath" />
	    <mapper>
	    <chainedmapper>
	      <flattenmapper/>
	      <globmapper from="*" to="lib/*" casesensitive="no"/>
	    </chainedmapper>
	    </mapper>
	</pathconvert>
	
	
	<!-- Targets -->
	
	<target name="init">
		<echo message="building on ${OSType}" />
		<condition property="os.win">
			<os family="windows" />
		</condition>
		<condition property="os.mac1.6">
			<and>
				<os family="mac" />
				<matches string="${os.version}" pattern="10.6.*" />
				<contains string="${os.name}" substring="OS X" />
			</and>
		</condition>
		<condition property="os.mac1.5">
			<and>
				<os family="mac" />
				<not><matches string="${os.version}" pattern="10.6.*" /></not>
				<contains string="${os.name}" substring="OS X" />
			</and>
		</condition>
		<condition property="os.linux">
			<and>
				<os family="unix" />
				<contains string="${os.name}" substring="Linux" />
			</and>
		</condition>
		<fail message="unsupported OS">
			<condition>
				<not>
					<or>
						<isset property="os.win" />
						<isset property="os.mac1.5" />
						<isset property="os.mac1.6" />
						<isset property="os.linux" />
					</or>
				</not>
			</condition>
		</fail>
	</target>
	
	<target name="clean" depends="init">
		<delete includeemptydirs="true">
			<fileset dir="${binarydir}" includes="**/*"/>
		 </delete>
		<mkdir dir="${binarydir}" />		
		<mkdir dir="${builddir}" />
		<mkdir dir="${builddir}/BrowserWin" />
		<mkdir dir="${builddir}/BrowserLinux" />
	</target>
	
	<target name="compile" depends="clean">
		<javac srcdir="${sourcedir}" destdir="${binarydir}" classpathref="libraries" 
			debug="on" excludes="**/.svn*">
			<compilerarg value="-Xlint:unchecked" />
		</javac>
	</target>
	
	<target name="jar" depends="clean, compile">
		<!-- build jar for windows -->
		<antcall target="winjar" />
		<!-- build jar for mac OS X 1.5 and below -->
		<antcall target="mac1.5jar" />
		<!-- build jar for mac OS X 1.6 -->
		<antcall target="mac1.6jar" />
		<!-- build jar for linux -->
		<antcall target="linuxjar" />
	</target>	
	
	<target name="genJar">
		<echo message="Mainfest Classpath: ${manifestClasspath}" />
		<jar destfile="${jarFileDestination}" basedir="${binarydir}">
			<manifest>
				<attribute name="Main-Class" value="org.perm.browser.gui.MainGui" />
				<attribute name="Created-By" value="University of Toronto, Department for Computer Science, Boris Glavic" />
				<attribute name="Class-Path" value="
					${manifestClasspath}
					lib/
					resource/"/>
			</manifest>
	 	</jar>
	</target>
	
	<target name="winjar" if="os.win">
		<var name="manifestClasspath" value="${winJarClassPath}" />
		<var name="jarFileDestination" 
			value="${builddir}/BrowserWin/permbrowser-win.jar" />
		<antcall target="genJar" />
	</target>

	<target name="mac1.5jar" if="os.mac1.5">
		<var name="manifestClasspath" value="${carbonJarClasspath}" />
		<var name="jarFileDestination" 
			value="${bundledir}/permbrowser-mac.jar" />
		<antcall target="genJar" />
	</target>
	
	<target name="mac1.6jar" if="os.mac1.6">
		<var name="manifestClasspath" value="${cocoaJarClasspath}" />
		<var name="jarFileDestination" 
			value="${bundledir}/permbrowser-mac.jar" />
		<antcall target="genJar" />
	</target>
	
	<target name="linuxjar" if="os.linux">
		<var name="manifestClasspath" value="${linuxJarClasspath}" />
		<var name="jarFileDestination" 
			value="${builddir}/BrowserLinux/permbrowser-linux.jar" />
		<antcall target="genJar" />
	</target>
			
	<target name="dist" depends="jar">
		<antcall target="bundleMac1.5"></antcall>
		<antcall target="bundleMac1.6"></antcall>
		<antcall target="bundleWin"></antcall>
		<antcall target="bundleLinux"></antcall>
	</target>	
	
	<target name="bundleWin" if="os.win">
		<var name="deploydir" value="${builddir}/BrowserWin" />
		<var name="swtname" value="swtwin" />
		<antcall target="copyResources" />
	</target>	
		
	<target name="bundleMac1.5" if="os.mac1.5">
		<var name="deploydir" value="${bundledir}" />
		<var name="swtname" value="swtmaccarbon" />
		<antcall target="copyResources" />
	</target>

	<target name="bundleMac1.6" if="os.mac1.6">
		<var name="deploydir" value="${bundledir}" />
		<var name="swtname" value="swtmaccocoa" />
		<antcall target="copyResources" />
	</target>
		
	<target name="bundleLinux" if="os.linux">
		<var name="deploydir" value="${buildir}/BrowserLinux" />
		<var name="swtname" value="swtlinux" />
		<antcall target="copyResources" />
	</target>

	<target name="copyResources">
		<copy todir="${deploydir}/lib">
			<fileset dir="${librarydir}">
				<exclude name=".svn"/>
				<exclude name="swt*/**" />
				<exclude name="ant-*.jar" />
			</fileset>
		</copy>
		<copy todir="${deploydir}/lib">
			<fileset dir="${librarydir}/${swtname}">
				<exclude name=".svn"/>
			</fileset>
		</copy>
		<copy todir="${deploydir}/resource">
			<fileset dir="${resourcedir}">
				<exclude name=".svn"/>
			</fileset>
		</copy>
	</target>
	
</project>	